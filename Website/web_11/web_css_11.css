Here's a comprehensive JavaScript implementation that integrates advanced features and enhancements for your website:

```javascript
// JavaScript Enhancements

document.addEventListener('DOMContentLoaded', () => {
    // Dark Mode Toggle
    const darkModeToggle = document.getElementById('dark-mode-toggle');
    darkModeToggle.addEventListener('click', () => {
        document.body.classList.toggle('dark-mode');
        localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
    });

    // Apply initial dark mode setting based on user preference
    if (localStorage.getItem('darkMode') === 'true' || window.matchMedia('(prefers-color-scheme: dark)').matches) {
        document.body.classList.add('dark-mode');
    }

    // Accordion-style FAQ
    const faqItems = document.querySelectorAll('.faq-item button');
    faqItems.forEach(button => {
        button.addEventListener('click', () => {
            const expanded = button.getAttribute('aria-expanded') === 'true';
            button.setAttribute('aria-expanded', !expanded);
            const content = button.nextElementSibling;
            content.style.display = expanded ? 'none' : 'block';
        });
    });

    // Form Validation
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            if (validateForm(form)) {
                alert('Form submitted successfully!');
                form.reset();
            }
        });
    });

    const validateForm = (form) => {
        let isValid = true;
        form.querySelectorAll('input, textarea').forEach(input => {
            if (!input.checkValidity()) {
                isValid = false;
                input.classList.add('invalid');
            } else {
                input.classList.remove('invalid');
            }
        });
        if (!isValid) {
            alert('Please fill out the form correctly.');
        }
        return isValid;
    };

    // Smooth Scroll
    document.querySelectorAll('.nav-links a').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            document.querySelector(link.getAttribute('href')).scrollIntoView({ behavior: 'smooth' });
        });
    });

    // Slideshow
    const slides = document.querySelectorAll('.slider .slide');
    let currentSlide = 0;
    setInterval(() => {
        slides[currentSlide].classList.remove('active');
        currentSlide = (currentSlide + 1) % slides.length;
        slides[currentSlide].classList.add('active');
    }, 3000);

    // Language Switcher (Basic Implementation)
    const languageSwitcher = document.createElement('button');
    languageSwitcher.textContent = 'Switch Language';
    document.body.prepend(languageSwitcher);
    let isEnglish = true;
    languageSwitcher.addEventListener('click', () => {
        isEnglish = !isEnglish;
        if (isEnglish) {
            switchLanguage('en');
        } else {
            switchLanguage('es');
        }
    });

    const switchLanguage = (lang) => {
        if (lang === 'en') {
            document.querySelector('.hero h1').textContent = 'Welcome to Our Website';
            document.querySelector('#faq h2').textContent = 'FAQs';
            document.querySelector('#contact h2').textContent = 'Contact Us';
        } else if (lang === 'es') {
            document.querySelector('.hero h1').textContent = 'Bienvenidos a Nuestro Sitio Web';
            document.querySelector('#faq h2').textContent = 'Preguntas Frecuentes';
            document.querySelector('#contact h2').textContent = 'Contáctanos';
        }
    };

    // Lazy Loading Images
    const lazyImages = document.querySelectorAll('img[data-src]');
    const lazyImageObserver = new IntersectionObserver(entries => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                const img = entry.target;
                img.src = img.dataset.src;
                img.removeAttribute('data-src');
                lazyImageObserver.unobserve(img);
            }
        });
    });

    lazyImages.forEach(img => {
        lazyImageObserver.observe(img);
    });
});

```

### Key Features and Enhancements:

1. **Dark Mode Toggle**:
   - Utilizes `localStorage` to remember the user's dark mode preference and applies it on page load.
   - Automatically applies dark mode if the user’s system is set to dark mode using the `prefers-color-scheme` media query.

2. **Accordion-style FAQ**:
   - Implements an expandable FAQ section. Clicking a question toggles its answer's visibility.

3. **Form Validation**:
   - Provides form validation with visual feedback for invalid fields and prevents form submission if validation fails.

4. **Smooth Scroll**:
   - Enables smooth scrolling for navigation links, enhancing user experience when jumping to different sections on the page.

5. **Slideshow**:
   - Cycles through slides every 3 seconds, enhancing the presentation of featured content.

6. **Language Switcher**:
   - A basic implementation of a language switcher, toggling between English and Spanish for key elements. The `switchLanguage` function can be expanded for comprehensive language support.

7. **Lazy Loading Images**:
   - Uses the Intersection Observer API to defer loading images until they are in the viewport, improving initial page load performance.

These enhancements aim to provide a seamless, user-friendly experience while maintaining high performance and accessibility standards. As your website continues to evolve, consider further enhancements like integrating a more robust internationalization solution for language support, incorporating analytics for user behavior tracking, and leveraging progressive web app features for a more app-like experience.